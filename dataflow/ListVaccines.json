{
	"name": "ListVaccines",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "country_vaccinations_type",
						"type": "DatasetReference"
					},
					"name": "VaccinationsCSV"
				},
				{
					"dataset": {
						"referenceName": "prices",
						"type": "DatasetReference"
					},
					"name": "PricesVaccinationsCSV"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Results",
						"type": "DatasetReference"
					},
					"name": "VaccineDetails"
				}
			],
			"transformations": [
				{
					"name": "DistinctRows"
				},
				{
					"name": "LeftJoin"
				},
				{
					"name": "SelectColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          location as string,",
				"          date as string,",
				"          vaccine as string,",
				"          total_vaccinations as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> VaccinationsCSV",
				"source(output(",
				"          vaccine as string,",
				"          us_price as string,",
				"          eu_price as string,",
				"          doses_required as string,",
				"          days_apart as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PricesVaccinationsCSV",
				"VaccinationsCSV aggregate(groupBy(vaccine_name = vaccine),",
				"     RowCount = count(1)) ~> DistinctRows",
				"DistinctRows, PricesVaccinationsCSV join(vaccine_name == vaccine,",
				"     joinType:'left',",
				"     broadcast: 'auto')~> LeftJoin",
				"LeftJoin select(mapColumn(",
				"          vaccine_name,",
				"          us_price,",
				"          eu_price,",
				"          doses_required,",
				"          days_apart",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumns",
				"SelectColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['vaccine_type_details'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> VaccineDetails"
			]
		}
	}
}