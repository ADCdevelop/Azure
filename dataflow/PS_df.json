{
	"name": "PS_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vaccinations_by_manufacturer",
						"type": "DatasetReference"
					},
					"name": "vaccinations"
				},
				{
					"dataset": {
						"referenceName": "pop_by_country_2021_2022",
						"type": "DatasetReference"
					},
					"name": "PopByCountry"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SelectPopulationOnly"
				},
				{
					"name": "SelectCountryandVax"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          location as string,",
				"          date as string,",
				"          vaccine as string,",
				"          total_vaccinations as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> vaccinations",
				"source(output(",
				"          Rank as string,",
				"          name as string,",
				"          pop2022 as string,",
				"          pop2021 as string,",
				"          GrowthRate as string,",
				"          area as string,",
				"          Density as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PopByCountry",
				"PopByCountry select(mapColumn(",
				"          name,",
				"          pop2022,",
				"          pop2021",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectPopulationOnly",
				"vaccinations select(mapColumn(",
				"          location,",
				"          date,",
				"          total_vaccinations",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCountryandVax",
				"SelectCountryandVax aggregate(groupBy(location),",
				"     date = last(date)) ~> aggregate1",
				"aggregate1, SelectPopulationOnly exists(location == name,",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1"
			]
		}
	}
}