{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADCDFStaging"
		},
		"AzureDataLakeStorageLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageLS'"
		},
		"AzureDataLakeStorageLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adcdlstorage.dfs.core.windows.net"
		},
		"GitHubURL_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/ADCdevelop/Azure/Data/country_vaccinations_by_manufacturer.csv"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AP_CopyRawDatafromGIT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy raw data files",
						"description": "Copy raw data files from Git Hub repository",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureDataLakeStorageLS",
										"type": "LinkedServiceReference"
									},
									"path": "rawdata/Logs"
								}
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GitRaw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADL_GitRawData",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@concat('country_vaccinations_by_manufacturer_',formatDateTime(utcnow(),'yyyyMMdd_HHmm'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GitRaw')]",
				"[concat(variables('factoryId'), '/datasets/ADL_GitRawData')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AP_Vaccine_Types')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "VaccineTypeDetails",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ListVaccines",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"VaccinationsCSV": {},
									"PricesVaccinationsCSV": {},
									"VaccineDetails": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ListVaccines')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADL_GitRawData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "GIT",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitRaw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GitHubURL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "vaccine",
						"type": "String"
					},
					{
						"name": "total_vaccinations",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GitHubURL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Results')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "queryready"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/country_vaccinations_type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_vaccinations_by_manufacturer.csv",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "vaccine",
						"type": "String"
					},
					{
						"name": "total_vaccinations",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "price_vaccines.csv",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "vaccine",
						"type": "String"
					},
					{
						"name": "us_price",
						"type": "String"
					},
					{
						"name": "eu_price",
						"type": "String"
					},
					{
						"name": "doses_required",
						"type": "String"
					},
					{
						"name": "days_apart",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitHubURL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('GitHubURL_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ListVaccines')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "country_vaccinations_type",
								"type": "DatasetReference"
							},
							"name": "VaccinationsCSV"
						},
						{
							"dataset": {
								"referenceName": "prices",
								"type": "DatasetReference"
							},
							"name": "PricesVaccinationsCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Results",
								"type": "DatasetReference"
							},
							"name": "VaccineDetails"
						}
					],
					"transformations": [
						{
							"name": "DistinctRows"
						},
						{
							"name": "LeftJoin"
						},
						{
							"name": "SelectColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          location as string,",
						"          date as string,",
						"          vaccine as string,",
						"          total_vaccinations as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> VaccinationsCSV",
						"source(output(",
						"          vaccine as string,",
						"          us_price as string,",
						"          eu_price as string,",
						"          doses_required as string,",
						"          days_apart as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PricesVaccinationsCSV",
						"VaccinationsCSV aggregate(groupBy(vaccine_name = vaccine),",
						"     RowCount = count(1)) ~> DistinctRows",
						"DistinctRows, PricesVaccinationsCSV join(vaccine_name == vaccine,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> LeftJoin",
						"LeftJoin select(mapColumn(",
						"          vaccine_name,",
						"          us_price,",
						"          eu_price,",
						"          doses_required,",
						"          days_apart",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumns",
						"SelectColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['vaccine_type_details'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> VaccineDetails"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/country_vaccinations_type')]",
				"[concat(variables('factoryId'), '/datasets/prices')]",
				"[concat(variables('factoryId'), '/datasets/Results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PS_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "vaccinations_by_manufacturer",
								"type": "DatasetReference"
							},
							"name": "vaccinations"
						},
						{
							"dataset": {
								"referenceName": "pop_by_country_2021_2022",
								"type": "DatasetReference"
							},
							"name": "PopByCountry"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "psres",
								"type": "DatasetReference"
							},
							"name": "Destinations"
						}
					],
					"transformations": [
						{
							"name": "SelectPopulationOnly"
						},
						{
							"name": "SelectCountryandVax"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "exists1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          location as string,",
						"          date as string,",
						"          vaccine as string,",
						"          total_vaccinations as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vaccinations",
						"source(output(",
						"          Rank as string,",
						"          name as string,",
						"          pop2022 as string,",
						"          pop2021 as string,",
						"          GrowthRate as string,",
						"          area as string,",
						"          Density as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PopByCountry",
						"PopByCountry select(mapColumn(",
						"          name,",
						"          pop2022,",
						"          pop2021",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectPopulationOnly",
						"vaccinations select(mapColumn(",
						"          location,",
						"          date,",
						"          total_vaccinations",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectCountryandVax",
						"SelectCountryandVax aggregate(groupBy(location),",
						"     date = last(date)) ~> aggregate1",
						"aggregate1, SelectPopulationOnly exists(location == name,",
						"     negate:false,",
						"     broadcast: 'auto')~> exists1",
						"exists1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Destinations"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/vaccinations_by_manufacturer')]",
				"[concat(variables('factoryId'), '/datasets/pop_by_country_2021_2022')]",
				"[concat(variables('factoryId'), '/datasets/psres')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vaccinations_by_manufacturer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_vaccinations_by_manufacturer.csv",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "vaccine",
						"type": "String"
					},
					{
						"name": "total_vaccinations",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pop_by_country_2021_2022')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "population_by_country_2021_2022.csv",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Rank",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "pop2022",
						"type": "String"
					},
					{
						"name": "pop2021",
						"type": "String"
					},
					{
						"name": "GrowthRate",
						"type": "String"
					},
					{
						"name": "area",
						"type": "String"
					},
					{
						"name": "Density",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PS_move_to_new_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data_flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PS_df",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vaccinations": {},
									"PopByCountry": {},
									"Destinations": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PS_df')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/psres')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "psresult"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		}
	]
}